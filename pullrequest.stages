stage('Pull Request Build') {
    final REPOSITORY_LIST_FILE = "./script/repository-list.txt"
    final SETTINGS_XML_ID = "771ff52a-a8b4-40e6-9b22-d54c7314aa1e"
    final PROPERTIES_FILE_ID = "e67e0edc-2788-4e27-9232-5fb7a7c97d03"
    final SONARCLOUD_ID = "SONARCLOUD_TOKEN"
    configFileProvider([configFile(fileId: SETTINGS_XML_ID, variable: 'MAVEN_SETTINGS_XML_UPSTREAM')]) {
        println "Reading file ${REPOSITORY_LIST_FILE}"
        def file = readFile REPOSITORY_LIST_FILE
        def projectCollection = file.readLines()
        def gitURL = env.ghprbAuthorRepoGitUrl ?: env.GIT_URL
        def project = treebuild.getProjectGroupName(treebuild.getProject(gitURL))[1]

        if (project != "kie-docs") {
            treebuild.pullRequestBuild(projectCollection, project, "${SETTINGS_XML_ID}", "${PROPERTIES_FILE_ID}", "${SONARCLOUD_ID}", ["optaplanner", "drools", "appformer", "jbpm", "drools-wb", "kie-soup", "droolsjbpm-integration", "kie-wb-common", "openshift-drools-hacep"])
        } else {
            treebuild.pullRequestBuild(["kie-docs"], project, "${SETTINGS_XML_ID}", "${PROPERTIES_FILE_ID}", "")
        }
    }
}